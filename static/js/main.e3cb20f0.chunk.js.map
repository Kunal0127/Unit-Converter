{"version":3,"sources":["MyComponents/Header.js","MyComponents/Length.js","MyComponents/Angle.js","MyComponents/Temperature.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","type","id","href","role","toKilometer","meter","toMeter","kilometer","tryConvert","length","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","scaleNames","m","k","LengthInput","props","handleChange","bind","e","this","onLengthChange","target","value","scale","onChange","React","Component","LengthCalculator","state","handleMeterChange","handleKilometerChange","setState","Length","toRadian","degree","PI","toDegree","radian","angle","r","d","AngleInput","onAngleChange","AngleCalculator","handleRadianChange","handleDegreeChange","Angle","toCelsius","fahrenheit","toFahrenheit","celsius","temperature","c","f","TemperatureInput","onTemperatureChange","TemperatureCalculator","handleCelsiusChange","handleFahrenheitChange","Temperature","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3cb20f0.chunk.js","sourcesContent":["import React from \"react\";\n// import Angle from \"./Angle\";\nimport {Link} from \"react-router-dom\"\n\nexport default function Header() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/#\">\n            Unit Convertor\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item dropdown\">\n                <a\n                  className=\"nav-link active dropdown-toggle\"\n                  href=\"/#\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  Select Unit\n                </a>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/temperature\">\n                      Temperature\n                    </Link>\n                  </li>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/length\">\n                      Lenght\n                    </Link>\n                  </li>\n                  <li>\n                    <Link className=\"dropdown-item\" to=\"/angle\">\n                      Angle\n                    </Link>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction toKilometer(meter) {\n  return meter / 1000;\n}\n\nfunction toMeter(kilometer) {\n  return kilometer * 1000;\n}\n\nfunction tryConvert(length, convert) {\n  const input = parseFloat(length);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nconst scaleNames = {\n  m: \"Meter\",\n  k: \"Kilometer\",\n};\n\nclass LengthInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onLengthChange(e.target.value);\n  }\n\n  render() {\n    const length = this.props.length;\n    const scale = this.props.scale;\n    return (\n      <div>\n        <fieldset>\n          <legend>{scaleNames[scale]}:</legend>\n          {/* <input value={length} onChange={this.handleChange} /> */}\n          <input value={length || \"\"} onChange={this.handleChange} />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nclass LengthCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { length: \"\", scale: \"m\" };\n    this.handleMeterChange = this.handleMeterChange.bind(this);\n    this.handleKilometerChange = this.handleKilometerChange.bind(this);\n  }\n\n  handleMeterChange(length) {\n    this.setState({ scale: \"m\", length });\n  }\n\n  handleKilometerChange(length) {\n    this.setState({ scale: \"k\", length });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const length = this.state.length;\n    const meter = scale === \"k\" ? tryConvert(length, toMeter) : length;\n    const kilometer = scale === \"m\" ? tryConvert(length, toKilometer) : length;\n\n    return (\n      <>\n        <div className=\"container\">\n          <LengthInput\n            scale=\"m\"\n            length={meter}\n            onLengthChange={this.handleMeterChange}\n          />\n          <LengthInput\n            scale=\"k\"\n            length={kilometer}\n            onLengthChange={this.handleKilometerChange}\n          />\n          <hr />\n          <hr />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default function Length() {\n  return <LengthCalculator />;\n}\n","import React from \"react\";\n\nfunction toRadian(degree) {\n  return (degree * Math.PI) / 180;\n}\n\nfunction toDegree(radian) {\n  return (radian * 180) / Math.PI;\n}\n\nfunction tryConvert(angle, convert) {\n  const input = parseFloat(angle);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded;\n}\n\nconst scaleNames = {\n  r: \"radian\",\n  d: \"degree\",\n};\n\nclass AngleInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onAngleChange(e.target.value);\n  }\n  render() {\n    const angle = this.props.angle;\n    const scale = this.props.scale;\n    return (\n      <div>\n        <fieldset>\n          <legend>{scaleNames[scale]}</legend>\n          <input value={angle} onChange={this.handleChange} />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nclass AngleCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { angle: \"\", scale: \"r\" };\n    this.handleRadianChange = this.handleRadianChange.bind(this);\n    this.handleDegreeChange = this.handleDegreeChange.bind(this);\n  }\n\n  handleRadianChange(angle) {\n    this.setState({ scale: \"r\", angle });\n  }\n\n  handleDegreeChange(angle) {\n    this.setState({ scale: \"d\", angle });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const angle = this.state.angle;\n    const radian = scale === \"d\" ? tryConvert(angle, toRadian) : angle;\n    const degree = scale === \"r\" ? tryConvert(angle, toDegree) : angle;\n\n    return (\n      <div className=\"container\">\n        <AngleInput\n          scale=\"r\"\n          angle={radian}\n          onAngleChange={this.handleRadianChange}\n        />\n        <AngleInput\n          scale=\"d\"\n          angle={degree}\n          onAngleChange={this.handleDegreeChange}\n        />\n        <hr />\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default function Angle() {\n  return <AngleCalculator />;\n}\n","import React from \"react\";\n\n// function BoilingVerdict(props) {\n//   if (props.celsius >= 100) {\n//     return <p>The water would boil.</p>;\n//   }\n//   return <p>The water would not boil.</p>;\n// }\n//------------------------------------------------\nfunction toCelsius(fahrenheit) {\n  return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9) / 5 + 32;\n}\n//-------------------------------------------------\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\n//------------------------------------------------------------------\n\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\",\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = { temperature: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // this.setState({ temperature: e.target.value });\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    // const temperature = this.state.temperature;\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <div>\n        <fieldset>\n          <legend>\n            {/*Enter temperature in*/} {scaleNames[scale]}:\n          </legend>\n          <input value={temperature} onChange={this.handleChange} />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\n// -----------------------------------------------------------------------------------------------------------------------\n\nclass TemperatureCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { temperature: \"\", scale: \"c\" };\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({ scale: \"c\", temperature });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({ scale: \"f\", temperature });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius =\n      scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit =\n      scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <>\n        <div className=\"container\">\n          <TemperatureInput\n            scale=\"c\"\n            temperature={celsius}\n            onTemperatureChange={this.handleCelsiusChange}\n          />\n          <TemperatureInput\n            scale=\"f\"\n            temperature={fahrenheit}\n            onTemperatureChange={this.handleFahrenheitChange}\n          />\n          <hr />\n          <hr />\n          {/* <BoilingVerdict celsius={parseFloat(celsius)} /> */}\n        </div>\n      </>\n    );\n  }\n}\n\n//-----------------------------------------------------------\n\nexport default function Temperature() {\n  return (\n    <div>\n      {/* <h1>This is temperature</h1> */}\n      <TemperatureCalculator />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Header from \"./MyComponents/Header\";\nimport Length from \"./MyComponents/Length\";\nimport Angle from \"./MyComponents/Angle\";\nimport Temperature from \"./MyComponents/Temperature\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import { useState } from \"react\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/temperature\">\n          <Temperature />\n        </Route>\n        <Route path=\"/length\">\n          <Length />\n        </Route>\n        <Route path=\"/angle\">\n          <Angle />\n        </Route>\n      </Switch>\n      <p className=\"text-center\">Click menu/Select Unit to change unit.</p>\n    </Router>\n  );\n}\n\nexport default App;\n// function App() {\n//   const [count, setCount] = useState(0);\n\n//   return (\n//     <>\n//       <h2>Click this Button</h2>\n//       <button onClick={() => setCount(count + 1)}>{count}</button>\n//     </>\n//   );\n// }\n\n/* <Calculator /> */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}